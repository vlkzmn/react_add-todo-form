{"version":3,"sources":["api/users.ts","services/user.ts","components/AddTodoForm/AddTodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","AddTodoForm","onSubmit","useState","setUserId","title","setTitle","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","trim","completed","className","type","placeholder","value","onChange","target","disabled","map","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","startTodos","App","setTodos","currentTodos","newTodo","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afacb143.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const AddTodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!(title.trim()));\n    setHasUserIdError(!userId);\n\n    if (!(title.trim()) || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label>\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n        </label>\n\n        {hasTitleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n\n        {hasUserIdError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => (\n  <article\n    className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    data-id={id}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n\n    {user && <UserInfo user={user} />}\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport { AddTodoForm } from './components/AddTodoForm';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/user';\n\nconst startTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(startTodos);\n\n  function getNewTodoId(currentTodos: Todo[]) {\n    const maxId = Math.max(...currentTodos.map(todo => todo.id));\n\n    return maxId + 1;\n  }\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <AddTodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}